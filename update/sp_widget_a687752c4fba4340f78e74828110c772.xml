<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, $location, spUtil, amb, $http, $rootScope,$timeout) {
	var c = this;

	$scope.submitResponses = function(){
		$scope.data.submit = true;
		c.server.update().then(function(){
			if($scope.data.expiredTokenError)
				spUtil.addErrorMessage("Your token is expired. Contact an admin to re-enable it.");
			else
				spUtil.addInfoMessage("Successfully updated years of experience.");
		});
	};

	/*--Makes Widget Async--*/
	var title = $scope.data.title;
	if ($scope.options.use_instance_title == 'true')
		title = $scope.options.title;
	$scope.data = $scope.options;
	$scope.loadingData = true;
	/*--grabbing token from url and sending to server--*/
	var userLocation = window.location.href;
	var params = userLocation.split("=");
	$scope.data.tokenID = params[2];
	$scope.server.update();
}]]></client_script>
        <controller_as>c</controller_as>
        <css>//Taken from the activity widget&#13;
.timeline-body &gt; p {&#13;
  white-space: pre-wrap;&#13;
}&#13;
&#13;
.no-resize {&#13;
  resize: none;&#13;
}&#13;
&#13;
.journal-field-indicator {&#13;
	width: 5px;&#13;
  height: 23px;&#13;
  position: absolute;&#13;
  left: 5px;&#13;
  top: 5px;&#13;
  z-index: 3;&#13;
}&#13;
&#13;
.panel-heading {&#13;
 word-wrap: break-word;&#13;
}&#13;
&#13;
//Original css&#13;
&#13;
/*&#13;
.panel {&#13;
position: relative;&#13;
}&#13;
&#13;
.panel-heading i {&#13;
  cursor: pointer;&#13;
  position: absolute;&#13;
  padding: 10px;&#13;
  top: 0px;&#13;
  right: 0px;  &#13;
  cursor: pointer;&#13;
}&#13;
*/&#13;
.disabled-filter {&#13;
	color: #A0A0A0;&#13;
}&#13;
&#13;
.list-group-imte {&#13;
  overflow: hidden;&#13;
}&#13;
&#13;
.list-group-item.ng-enter {&#13;
  transition: all 1s;&#13;
  -webkit-transition: all 1s;&#13;
&#13;
  background-color: #c0dcfa;&#13;
}&#13;
&#13;
.list-group-item.ng-enter-active {&#13;
  background-color: #fff;&#13;
}&#13;
&#13;
.hide-x-overflow {&#13;
  overflow-x: hidden;&#13;
}&#13;
&#13;
.translated-html &gt; p {&#13;
  margin: 0px;&#13;
  padding: 0px;&#13;
}&#13;
&#13;
IMG {&#13;
  max-width: 320px;&#13;
  max-height: 240px;&#13;
}&#13;
&#13;
IMG.img-sm {&#13;
  max-height: 40px;&#13;
  max-width: 40px;&#13;
}&#13;
&#13;
.filter-box {&#13;
  margin-top: 10px;&#13;
}&#13;
&#13;
.list-item-text{&#13;
  overflow: hidden;&#13;
  height: 20px;&#13;
}</css>
        <data_table>sp_instance_vlist</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>table,display_field,glyph,filter,sp_page,color,size</field_list>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link/>
        <name>EMP Asset Lists</name>
        <option_schema>[{"name":"always_show","label":"Show even when empty","type":"boolean"},{"displayValue":"Activity","name":"activity","default_value":"x_entg_vrm_poc_activity","label":"Activity","type":"string","value":"x_entg_vrm_poc_activity"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	if (!input) // asynch load list
		return;
	
	var gr = new GlideRecord("x_134426_emp_personnel_asset_instance");
	gr._query();

	function getData(){
		data.list = [];
		data.categories = [];
		var tokenRecord, currentUser;
		if(input.tokenID){
			tokenRecord = new GlideRecord("x_134426_emp_tokens");
			tokenRecord.addQuery("token",input.tokenID);
			tokenRecord.query();
			tokenRecord.next();
		}else{
			currentUser = gs.getUserID();
		}
		while (gr.next()) {
			var record = {};
			$sp.getRecordElements(record, gr, data.fields);
			
			/*--If token exists, use tokenRecord to verify EMP User otherwise use GlideSystem to verify EMP User--*/
			if(input.tokenID ? tokenRecord.emp_user.sys_id == gr.emp_user.sys_id:currentUser == gr.emp_user.system_user.sys_id){
				record.sys_id = gr.getValue('sys_id');
				addAssetToCategory(gr.personnel_asset.category.getDisplayValue(), gr.getDisplayValue("personnel_asset"));
				data.list.push(record);
			}
		}
	}getData();

	if(input.submit){
		var empUser = new GlideRecord("x_134426_emp_user");

		/*--If a token is detected in URL, use token for authentication--*/
		if(input.tokenID){
			var tokenRecord = new GlideRecord("x_134426_emp_tokens");
			tokenRecord.addQuery('token', input.tokenID);
			tokenRecord.query();
			tokenRecord.next();
			if(tokenRecord.used){
				data.expiredTokenError = true;
				return;
			}else
				empUser.addQuery("sys_id", tokenRecord.getValue("emp_user"));
		}

		/*--otherwise use GlideSystem for authentication--*/
		else{
			empUser.addQuery("system_user", gs.getUserID());
		}
		empUser.query();
		empUser.next();

		/*--update personnel asset instances with years inputted--*/
		var grAsset = new GlideRecord("x_134426_emp_personnel_asset_instance");
		grAsset.addQuery("emp_user", empUser.getValue("sys_id"));
		grAsset.query();
		while(grAsset.next()){
			var catName = grAsset.personnel_asset.category.getDisplayValue();
			var assetName = grAsset.getDisplayValue("personnel_asset");
			var catIndex = categoryListContains(catName);
			var assetIndex = assetListContains(catIndex, assetName);
			var years = input.categories[catIndex].catAssets[assetIndex].assetYear;
			grAsset.years_of_experience = years;
			data.categories[catIndex].catAssets[assetIndex].assetYear = years;
			grAsset.update();
		}
	}
	
	/* data.categories = [
	 *		{
	 *			catName: "Client Side",
	 *			catAssets: [{assetName:"JavaScript",assetYear: 0},
	 *									{assetName:"AngularJS",assetYear:0}
	 *								 ]
	 *    },
	 *		{
	 *			catName: "Server Side",
	 *			catAssets: [{assetName:"Java",assetYear: 0},
	 *									{assetName:"ServiceNow",assetYear:0}
	 *								 ]
	 *		}
	 * ]
	 */
	function Category(catName, catAssets){
		this.catName = catName;
		this.catAssets = catAssets;
	}
	function Asset(assetName, assetYear){
		this.assetName = assetName;
		this.assetYear = parseFloat(assetYear);
	}

	/*--Returns index of category in data.categories, otherwise returns -1 --*/
	function categoryListContains(catName){
		for(var i = 0; i < data.categories.length; i++){
			if(catName == data.categories[i].catName)
				return i;
		}
		return -1;
	}
	
	/*--Returns index of asset in catAssets array for a given category--*/
	function assetListContains(catIndex, assetName){
		for(var i = 0; i < data.categories[catIndex].catAssets.length; i++){
			if(assetName == data.categories[catIndex].catAssets[i].assetName)
				return i;
		}
		return -1;
	}

	/*--Sorts assets into their appropriate category--*/
	function addAssetToCategory(catName, catAsset){
		var year = gr.getDisplayValue("years_of_experience");
		var catIndex = categoryListContains(catName);
		if(catIndex >= 0){
			data.categories[catIndex].catAssets.push(new Asset(catAsset, year));
		}else{
			data.categories.push(new Category(catName, [new Asset(catAsset, year)]));
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>jade.garcia</sys_created_by>
        <sys_created_on>2017-11-29 17:05:45</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>a687752c4fba4340f78e74828110c772</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>EMP Asset Lists</sys_name>
        <sys_package display_value="Employee Management Portal" source="x_134426_emp">06136fe0dbd04300e5c755d0cf961930</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Employee Management Portal">06136fe0dbd04300e5c755d0cf961930</sys_scope>
        <sys_update_name>sp_widget_a687752c4fba4340f78e74828110c772</sys_update_name>
        <sys_updated_by>jade.garcia</sys_updated_by>
        <sys_updated_on>2017-11-30 20:27:05</sys_updated_on>
        <template><![CDATA[<div>
  <!-- ng-repeat the tables for data.categories-->
  <h4>Enter Years of Experience for Each Skill</h4>
  <form ng-submit="submitResponses()" ng-controller="c">
    <div class="panel panel-{{options.color}} b" ng-repeat="category in data.categories track by $index">
      <div class="panel-heading form-inline" ng-hide="options.hide_header">
        <span class="panel-title"><i ng-if="options.glyph" class="fa fa-{{options.glyph}} m-r"></i>{{category.catName}}</span>
        <div class="clearfix"></div>
      </div>

      <!-- body -->
      <table class="table table-striped table-responsive" ng-if="data.list.length">
        <tbody>
          <tr ng-repeat="item in category.catAssets track by $index">
            <td>{{item.assetName}}</td>
            <td style="float:right;">
              <input type="number" ng-model="item.assetYear" min="0" max="50"/>
            </td>
          </tr>
        </tbody>
      </table>

      <!-- footer -->
      <div class="panel-footer" ng-hide="options.hide_footer">
        <div class="m-t-xs panel-title"></div>
        <span class="clearfix"></span>
      </div>

    </div>
    <input type="submit" value="Submit"/>
  </form>

</div>]]></template>
    </sp_widget>
</record_update>
